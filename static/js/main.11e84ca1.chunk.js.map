{"version":3,"sources":["assets/img/logo-red.svg","firebase/firebase.js","firebase/config.js","auth/actions.js","auth/action-types.js","auth/reducer.js","auth/selectors.js","components/require-auth-route/require-auth-route.js","components/require-unauth-route/require-unauth-route.js","pages/sign-in/sign-in-page.js","components/sidebar/SubMenu.js","components/sidebar/SideBar.js","components/content/Navbar.js","components/skooters/actions.js","components/skooters/action-types.js","components/skooters/SkooterForm.js","components/skooters/SkooterCreate.js","components/skooters/SkooterEdit.js","components/Modal.js","history.js","components/skooters/SkooterDelete.js","components/skooters/SkooterList.js","components/skooters/SkooterEditDelete.js","components/users/actions.js","components/users/action-types.js","components/users/UserForm.js","components/users/UserCreate.js","components/users/UserEdit.js","components/users/UserDelete.js","components/users/UserList.js","components/users/UserEditDelete.js","auth/salir.js","components/content/Content.js","pages/tasks/tasks-page.js","App.js","registerServiceWorker.js","components/skooters/reducer.js","components/users/reducer.js","reducers.js","store.js","auth/auth.js","index.js"],"names":["module","exports","firebaseAuth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","dbStore","database","db","firestore","settings","dbs","admin","result","dispatch","collection","where","user","email","get","then","snapshot","empty","console","log","forEach","doc","data","roles","signInSuccess","catch","error","signInError","getAdmin","initAuth","type","payload","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithEmailPassword","password","signInWithEmailAndPassword","signOut","signOutSuccess","AuthState","Record","authenticated","id","authReducer","state","merge","uid","getAuth","createSelector","toJS","RequireAuthRoute","Component","component","rest","render","props","to","pathname","from","location","RequireUnauthRoute","SignInPage","onChangeHandler","event","currentTarget","name","value","setState","handleSubmit","errors","values","length","userEmail","userPassword","bind","className","class","src","logo","width","height","this","onSubmit","htmlFor","placeholder","onChange","errorMessage","validate","required","minLength","maxLength","color","icon","faEnvelope","onClick","faGoogle","React","connect","Object","SubMenu","useState","collapsed","setCollapsed","title","items","classNames","isOpen","navbar","map","item","index","key","tag","Link","target","submenus","SideBar","toggle","style","vertical","faUserCircle","faStar","faMapMarked","faSignOutAlt","setOpen","light","expand","faAlignJustify","fetchSkooters","orderBy","limit","skooters","skooter","push","err","fetchSkootersPage","page","pageSearch","firstVisible","docs","startAt","snapshotSkooter","fetchSkooter","a","exists","Error","response","CreateSkooter","message","idskooter","fadein","setTimeout","handleChange","pattern","in","reduxForm","form","SkooterCreate","formValues","createSkooter","SkooterForm","skooterIdskooter","bateria","battery_level","cobertura","ultima_latitud","ultima_longitud","set","saveSkooter","SkooterEdit","match","params","editSkooter","defaultValues","model","ownProps","idOld","update","delete","ModalDelete","modal","setModal","content","actions","createBrowserHistory","SkooterDelete","Fragment","deleteSkooter","history","Modal","renderContent","renderActions","onDismiss","SkooterList","activePage","pageNumber","hover","renderList","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","handlePageChange","SkooterEditDelete","fetchSkootersSearch","skooterId","sm","md","size","fetchUsers","users","fetchUsersPage","snapshotUser","fetchUser","CreateUser","balance","created_at","UserCreate","createUser","UserForm","userName","userBalance","stripeCustomerId","add","docRef","UserEdit","editUser","UserDelete","deleteUser","UserList","UserEditDelete","fetchUsersSearch","Salir","fluid","exact","path","Content","mapStateToProps","mapDispatchToProps","authActions","withRouter","const","TasksPage","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","skootersReducer","action","_","mapKeys","omit","usersReducer","createRootReducer","combineReducers","router","connectRouter","preloadedState","store","createStore","compose","applyMiddleware","thunk","routerMiddleware","rootElement","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","Promise","resolve","reject","unsubscribe","onAuthStateChanged","authUser","App","ReactDOM"],"mappings":"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","file":"static/js/main.11e84ca1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-red.fb7faccb.svg\";","import firebase from 'firebase/app';\n\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nimport { firebaseConfig } from './config';\n\n\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const firebaseAuth = firebase.auth();\nexport const firebaseDb = firebase.database();\n\n\n\nconst dbs = () => {  \nlet db = firebase.firestore();\ndb.settings({});\nreturn db;\n}\n\nexport const dbStore = dbs();","export const firebaseConfig = {\n  apiKey: \"AIzaSyBep5xsAtCRREv1Q0XyaLT50vaDhC6b31Y\",\n    authDomain: \"euskooters.firebaseapp.com\",\n    databaseURL: \"https://euskooters.firebaseio.com\",\n    projectId: \"euskooters\",\n    storageBucket: \"euskooters.appspot.com\",\n    messagingSenderId: \"406968921183\",\n    appId: \"1:406968921183:web:dcde4c1e7c24a0d6663fea\",\n    measurementId: \"G-811M2QCBZM\"  \n};\n","import firebase from 'firebase';\nimport { firebaseAuth, dbStore } from '../firebase/firebase';\nimport {\n  INIT_AUTH,\n  SIGN_IN_ERROR,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT_SUCCESS\n} from './action-types';\n\n\nfunction authenticate(provider) {\n  return dispatch => {\n    firebaseAuth.signInWithPopup(provider)\n      .then(result => dispatch(admin(result)))\n      .catch(error => dispatch(signInError(error)));\n  };\n}\n\nfunction admin(result) {\n  return dispatch => {\n  let usersRef = dbStore.collection('users');\nlet query = usersRef.where('email', '==', result.user.email).get()\n  .then(snapshot => {\n    if (snapshot.empty) {\n      console.log('No matching documents.');\n      return;\n    }\n    snapshot.forEach(doc => {      \n      if(doc.data().roles.admin == true){\n        console.log('es administrador');\n        dispatch(signInSuccess(result))       \n      } else {\n        console.log('No es administrador');\n      }      \n    })\n  })\n  .catch(error => dispatch(signInError(error)));\n}}\n\nexport function getAdmin(){\n  \n}\n\nexport function initAuth(user) {\n  return {\n    type: INIT_AUTH,\n    payload: user\n  };\n}\n\n\nexport function signInError(error) {\n  console.log('error al acceder')\n  return {\n    type: SIGN_IN_ERROR,\n    payload: error\n  };\n}\n\n\nexport function signInSuccess(result) {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: result.user\n  };\n}\n\nexport function signInWithGoogle() {\n  return authenticate(new firebase.auth.GoogleAuthProvider());\n}\n\nexport function signInWithEmailPassword(email,password) {\n  return dispatch => {\n    firebaseAuth.signInWithEmailAndPassword(email,password)\n      .then(result => dispatch(admin(result)))\n      .catch(error => dispatch(signInError(error)));\n  };\n}\n\n\nexport function signOut() {\n  console.log('entra al sign Out')\n  return dispatch => {\n    firebaseAuth.signOut()\n      .then(() => dispatch(signOutSuccess()));\n  };\n}\n\n\nexport function signOutSuccess() {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n}\n","export const INIT_AUTH = 'INIT_AUTH';\n\nexport const SIGN_IN_ERROR = 'SIGN_IN_ERROR';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\n\nexport const SIGN_OUT_SUCCESS = 'SIGN_OUT_SUCCESS';\n","import { Record } from 'immutable';\nimport { INIT_AUTH, SIGN_IN_SUCCESS, SIGN_OUT_SUCCESS, SIGN_IN_ERROR } from './action-types';\n\n\nexport const AuthState = new Record({\n  authenticated: false,\n  error: null,\n  id: null\n});\n\n\nexport function authReducer(state = new AuthState(), {payload, type}) {\n  switch (type) {\n    case INIT_AUTH:\n    case SIGN_IN_SUCCESS:\n      return state.merge({\n        authenticated: !!payload,\n        id: payload ? payload.uid : null\n      });\n    case SIGN_OUT_SUCCESS:\n      return new AuthState();\n    case SIGN_IN_ERROR:\n      console.log('entro al reducer')\n      return state.merge({\n        authenticated: false,\n        error: payload,\n        id: null\n      });\n       \n\n    default:\n      return state;\n  }\n}\n","import { createSelector } from 'reselect';\n\n\nexport function isAuthenticated(state) {\n  return getAuth(state).authenticated;\n}\n\n\n//=====================================\n//  MEMOIZED SELECTORS\n//-------------------------------------\n\nexport const getAuth = createSelector(\n  state => state.auth,\n  auth => auth.toJS()\n);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\n\nconst RequireAuthRoute = ({component: Component, authenticated, ...rest}) => (\n  <Route\n    {...rest}\n    render={props => {\n      return authenticated ? (\n        <Component {...props}/>\n      ) : (\n        <Redirect to={{\n          pathname: '/sign-in',\n          state: {from: props.location}\n        }}/>\n      )\n    }}\n  />\n);\n\n\nexport default RequireAuthRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\n\nconst RequireUnauthRoute = ({component: Component, authenticated, ...rest}) => (\n  <Route\n    {...rest}\n    render={props => {\n      return authenticated ? (\n        <Redirect to={{\n          pathname: '/',\n          state: {from: props.location}\n        }}/>\n      ) : (\n        <Component {...props}/>\n      )\n    }}\n  />\n);\n\n\nexport default RequireUnauthRoute;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, Label } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { signInWithGoogle, signInWithEmailPassword } from '../../auth/actions';\nimport './sign-in-page.css';\nimport logo from '../../assets/img/logo-red.svg';\n\nclass SignInPage extends React.Component {\n      constructor(props) {\n      super(props);\n      this.state = {\n        email: '',\n        password: '',\n        error: null\n    } \n    this.handleSubmit = this.handleSubmit.bind(this);    \n    this.onChangeHandler = this.onChangeHandler.bind(this); \n};\n\nonChangeHandler = (event) => {\n    const {name, value} = event.currentTarget;\n  \n    if(name === 'userEmail') {\n      this.setState({email: value})\n    }\n    else if(name === 'userPassword'){\n      this.setState({password: value})\n    }\n  }; \n\n  handleSubmit = (event, errors, values) => {\n    if(errors.length===0){  \n        console.log(values.userEmail)      \n        this.props.signInWithEmailPassword(values.userEmail, values.userPassword)          \n    }   \n  };\n\n   render(){    \n      return (\n    <div>\n      <div className=\"sign-in\">\n      <img class=\"mx-auto d-block\" src={logo} width=\"200px\" height=\"50px\"/>\n      <br></br>\n          {this.error !== null && <div>{this.error}</div>}\n        <AvForm onSubmit={this.handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"userEmail\" className=\"block\">\n            Email:\n          </Label>\n          <AvField\n            type=\"email\"\n            name=\"userEmail\"\n            placeholder=\"ejemplo123@gmail.com\"\n            id=\"userEmail\"\n            onChange = {(event) => this.onChangeHandler(event)}\n            errorMessage=\"Correo no válido\"\n            validate={{\n              required: {value: true},              \n              minLength: {value: 3},\n              maxLength: {value: 50}\n            }}\n          />\n          </FormGroup>\n          <FormGroup>\n          <Label htmlFor=\"userPassword\" className=\"block\">\n            Password:\n          </Label>\n          <AvField\n            type=\"password\"\n            name=\"userPassword\"\n            placeholder=\"Contraseña\"\n            id=\"userPassword\"\n            onChange = {(event) => this.onChangeHandler(event)}\n            errorMessage=\"La contraseña debe tener al menos 6 caracteres.\"\n            validate={{\n              required: {value: true},\n              minLength: {value: 6},\n              maxLength: {value: 20}\n            }}\n          />\n          </FormGroup>\n        <Button color=\"secondary\" type=\"submit\" className=\"sign-in__button\" ><FontAwesomeIcon icon={faEnvelope} className=\"mr-2\"/>Correo y Contraseña</Button>\n        </AvForm>\n        <Button color=\"danger\" className=\"sign-in__button_red\" onClick={this.props.signInWithGoogle}><FontAwesomeIcon icon={faGoogle} className=\"mr-2\"/>Entrar con Google</Button>{' '}\n        </div>\n    </div>\n  );\n};\n}\n\nconst mapStateToProps = (state) => {\n  return { auth: Object.values(state.auth) };  \n};\n\nexport default connect(mapStateToProps, { signInWithGoogle, signInWithEmailPassword })(SignInPage);","import React, { useState } from 'react';\nimport  { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nconst SubMenu = props => {\n  \n  const [collapsed, setCollapsed] = useState(true)\n  const toggleNavbar = () => setCollapsed(!collapsed)\n  const { icon, title, items } = props;\n \n  return (\n    <div>\n      <NavItem onClick={toggleNavbar} className={classNames({'menu-open': !collapsed})}>\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\"/>{title}\n        </NavLink>\n      </NavItem>\n      <Collapse isOpen={!collapsed} navbar className={classNames('items-menu',{'mb-1': !collapsed})}>\n        {items.map((item, index) => (\n            <NavItem key={index} className=\"pl-4\">\n              <NavLink tag={Link} to={item.target}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n            ))}\n      </Collapse>\n    </div>\n  );\n}\n\nexport default SubMenu;\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle, faStar, faMapMarked, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SubMenu from './SubMenu';\r\nimport { NavItem, NavLink, Nav } from 'reactstrap';\r\nimport classNames from 'classnames';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from '../../assets/img/logo-red.svg'\r\n\r\n\r\nconst SideBar = props => (\r\n    <div className={classNames('sidebar', {'is-open': props.isOpen})}>\r\n      <div className=\"sidebar-header\">\r\n        <span color=\"info\" onClick={props.toggle} style={{color: '#fff'}}>&times;</span>\r\n        <br></br>\r\n        <img class=\"mx-auto d-block\" src={logo} width=\"200px\" height=\"50px\"/> \r\n        <br></br>                \r\n      </div>\r\n      <div className=\"side-menu\">\r\n        <Nav vertical className=\"list-unstyled pb-3\">\r\n          <p>Panel Administrativo</p>\r\n          \r\n          <SubMenu title=\"Usuarios\" icon={faUserCircle} items={submenus[0]}/>               \r\n          \r\n          <SubMenu title=\"Skooters\" icon={faStar} items={submenus[1]}/>\r\n          \r\n          <SubMenu title=\"Sitios\" icon={faMapMarked} items={submenus[2]}/>\r\n          \r\n          <NavItem>\r\n            <NavLink tag={Link} to={'/salir'}>\r\n              <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-2\"/>Salir\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const submenus = [\r\n    [\r\n      {\r\n        title: \"Agregar Usuario\",\r\n        target: \"/Add_user\"\r\n      },\r\n      {\r\n        title: \"Listar Usuarios\",\r\n        target: \"/List_users\",        \r\n      },\r\n      {\r\n        title: \"Modificar Eliminar Usuarios\",\r\n        target: \"/Upd_Delete_users\",      \r\n      }\r\n    ],\r\n    [\r\n      {\r\n        title: \"Agregar Skooter\",\r\n        target: \"/Add_skooter\"\r\n      },\r\n      {\r\n        title: \"Listar Skooter\",\r\n        target: \"/List_skooters\",        \r\n      },\r\n      {\r\n        title: \"Modificar Eliminar Skooter\",\r\n        target: \"/Upd_Delete_skooters\",      \r\n      }\r\n    ],\r\n    [\r\n      {\r\n        title: \"Agregar Sitios\",\r\n        target: \"/Add_places\"\r\n      },\r\n      {\r\n        title: \"Listar Sitios\",\r\n        target: \"/List_places\",        \r\n      },\r\n      {\r\n        title: \"Modificar Eliminar Sitios\",\r\n        target: \"/Upd_Delete_places\",      \r\n      }\r\n    ]\r\n  ]\r\n  \r\n\r\nexport default SideBar;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAlignJustify } from '@fortawesome/free-solid-svg-icons';\r\nimport { Navbar, Button, NavbarToggler, Collapse, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default props => {\r\n\r\n  const [isOpen, setOpen] = useState(true)\r\n  const toggle = () => setOpen(!isOpen)\r\n  \r\n  return (\r\n    <Navbar color=\"light\" light className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\" expand=\"md\">\r\n      <Button color=\"danger\" onClick={props.toggle}>\r\n        <FontAwesomeIcon icon={faAlignJustify}/>\r\n      </Button>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          \r\n      </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { CREATE_SKOOTER, FETCH_SKOOTERS, FETCH_SKOOTER, DELETE_SKOOTER, EDIT_SKOOTER, SAVE_ERROR } from './action-types';\r\n//import { formValues } from 'redux-form';\r\n//import history from \"../../history\";\r\nimport { dbStore } from '../../firebase/firebase';\r\n//import React, { useContext, useEffect, useState } from 'react'\r\n\r\n\r\nexport function saveSkooter (error) {\r\n    return{\r\n      type: SAVE_ERROR,\r\n      payload: error\r\n    };\r\n}\r\n\r\nexport function createSkooter  (formValues) {\r\n    return dispatch => {\r\n        let skooters = {\r\n            id: formValues.skooterIdskooter,\r\n            bateria: '',\r\n            battery_level: '',\r\n            cobertura: '',\r\n            ultima_latitud: '',\r\n            ultima_longitud: ''\r\n          };      \r\n          let setDoc = dbStore.collection('skooters').doc(formValues.skooterIdskooter).set(skooters).catch(error => dispatch(saveSkooter(error)));\r\n        }            \r\n};\r\n\r\nexport function editSkooter  (idOld, values) {\r\n  return dispatch => {\r\n        let skooterRef = dbStore.collection('skooters').doc(idOld);\r\n        let getDoc = skooterRef.get()\r\n          .then(doc => {\r\n          if (!doc.exists) {\r\n            console.log('No such document!');\r\n         } else {\r\n       let setSkooter = dbStore.collection('skooters').doc(values.skooterIdskooter).set(doc.data())\r\n       let refSkooter = dbStore.collection('skooters').doc(values.skooterIdskooter)       \r\n       let updateId = refSkooter.update({id: values.skooterIdskooter}).then(dbStore.collection('skooters').doc(idOld).delete()) \r\n       dispatch({ type: DELETE_SKOOTER, payload: idOld });   \r\n      }\r\n  })\r\n  .catch(err => {\r\n    console.log('Error getting document', err);\r\n  });    \r\n      \r\n  }\r\n      };\r\n\r\n\r\nexport const fetchSkooters = () => dispatch => {\r\n  let skootersRef = dbStore.collection('skooters').orderBy('id').limit(10)\r\nlet allSkooters = skootersRef.get()\r\n  .then(snapshot => {\r\n    const skooters = []\r\n    snapshot.forEach(skooter => {      \r\n      skooters.push({ key: skooter.id, ...skooter.data() });\r\n    });\r\n    dispatch({ type:FETCH_SKOOTERS, payload: skooters });    \r\n  })\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\nexport const fetchSkootersPage = (page) => dispatch => {\r\n  console.log('pagina '+ page)\r\n  const pageSearch = (page-1) * 10\r\n  console.log('search '+pageSearch)\r\n    let skootersRef = dbStore.collection('skooters').orderBy('id')  \r\nlet allSkooters = skootersRef.get()\r\n  .then(snapshot => {\r\n    var firstVisible = snapshot.docs[pageSearch];\r\n    let skooterPaged = dbStore.collection('skooters').orderBy('id').startAt(firstVisible.data().id).limit(10)\r\n\r\n    let allPagedSkooters = skooterPaged.get()\r\n    .then( snapshotSkooter => {\r\n    const skooters = []\r\n    snapshotSkooter.forEach(skooter => { \r\n      console.log(skooter.id) \r\n      skooters.push({ key: skooter.id, ...skooter.data() });\r\n    });\r\n    dispatch({ type:FETCH_SKOOTERS, payload: skooters });    \r\n  })})\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\nexport const fetchSkootersSearch = (id) => dispatch => {\r\n  let skootersRef = dbStore.collection('skooters').orderBy('id').where('id', '>=', id).where('id', '<=', id+\"z\")\r\nlet allSkooters = skootersRef.get()\r\n  .then(snapshot => {\r\n    const skooters = []\r\n    snapshot.forEach(skooter => {      \r\n      skooters.push({ key: skooter.id, ...skooter.data() });\r\n    });\r\n    dispatch({ type:FETCH_SKOOTERS, payload: skooters });    \r\n  })\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\nexport const fetchSkooter = (id) => async dispatch => {\r\n  let responseSkooter = dbStore.collection('skooters').doc(id).get().then((doc) => {\r\n    // check if the document exists\r\n    if (doc.exists) {\r\n      const response = doc.data();\r\n      dispatch({ type: FETCH_SKOOTER, payload: response });      \r\n    } else {\r\n      throw new Error('No Such Document');\r\n    }\r\n})    \r\n}\r\n\r\nexport const deleteSkooter = (id) => async dispatch => {\r\n  let deleteSkooter = dbStore.collection('skooters').doc(id).delete();    \r\n  dispatch({ type: DELETE_SKOOTER, payload: id });   \r\n}","export const CREATE_SKOOTER = 'CREATE_SKOOTER';\r\nexport const FETCH_SKOOTERS = 'FETCH_SKOOTERS';\r\nexport const FETCH_SKOOTER = 'FETCH_SKOOTER';\r\nexport const DELETE_SKOOTER = 'DELETE_SKOOTER';\r\nexport const EDIT_SKOOTER = 'EDIT_SKOOTERS';\r\nexport const SAVE_ERROR = 'SAVE_ERROR';","/*import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Button, FormGroup, Label, Fade } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\n\r\nexport class CreateSkooter extends React.Component {\r\n    static propTypes = {\r\n      onSubmit: PropTypes.func.isRequired\r\n      };\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          errors: null,\r\n          fadein: false,\r\n          message: ''\r\n      }      \r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n  }\r\n  \r\n\r\n    handleSubmit(event, errors, values) {\r\n      if(errors.length===0){\r\n      this.props.onSubmit(values)\r\n        this.message('Agregado');  \r\n      } else this.message('Error campos no válidos');\r\n    }\r\n  \r\n  message = (message) =>{\r\n    this.setState({      \r\n      fadein: true,\r\n      message: message\r\n    })\r\n    setTimeout (()=>{\r\n      this.setState({\r\n        fadein: false,\r\n        message: ''\r\n      })\r\n    },3000);\r\n  }\r\n\r\nrender (){  \r\n  const defaultValues = {\r\n    skooterIdskooter: '',\r\n    skooterAlarma: '',\r\n    skooterBateria: '',\r\n    skooterCobertura: '',\r\n    skooterCodigo: '',\r\n    skooterCupon: ''\r\n} \r\n  return(  \r\n    <div> \r\n          <AvForm onSubmit={this.handleSubmit} model={defaultValues}>\r\n        <AvGroup>\r\n          <Label htmlFor=\"skooterIdskooter\" className=\"block\">\r\n            Id Skooter:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterIdskooter\"\r\n            placeholder=\"CX####\"\r\n            id=\"skooterIdskooter\"\r\n            errorMessage=\"Id no válido\"\r\n            validate={{\r\n                required: {value: true},\r\n                pattern: {value: '^CX[0-9]+$'},\r\n                minLength: {value: 6},\r\n                maxLength: {value: 6}\r\n              }}\r\n          />\r\n          </AvGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"skooterAlarma\" className=\"block\">\r\n            Alarma:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterAlarma\"\r\n            placeholder=\"Estado Alarma\"\r\n            id=\"skooterAlarma\"               \r\n            errorMessage=\"El estado de la Alarma es obligatorio\"\r\n            validate={{\r\n                required: {value: true},\r\n                minLength: {value: 1},\r\n                maxLength: {value: 6}\r\n              }}                  \r\n          />\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"skooterBateria\" className=\"block\">\r\n            Bateria:\r\n          </Label>\r\n          <AvField\r\n            type=\"number\"\r\n            name=\"skooterBateria\"\r\n            placeholder=\"1\"\r\n            id=\"skooterBateria\"            \r\n          />\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"skooterCobertura\" className=\"block\">\r\n            Cobertura:\r\n          </Label>\r\n          <AvField\r\n            type=\"number\"\r\n            name=\"skooterCobertura\"\r\n            placeholder=\"1\"\r\n            id=\"skooterCobertura\"          \r\n          />\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"skooterCodigo\" className=\"block\">\r\n          Codigo:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterCodigo\"\r\n            placeholder=\"Estado Codigo\"\r\n            id=\"skooterCodigo\"\r\n          />\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"skooterCupon\" className=\"block\">\r\n            Cupon:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterCupon\"\r\n            placeholder=\"Cupon\"\r\n            id=\"skooterCupon\"\r\n          />\r\n          </FormGroup>\r\n        <Button color=\"primary\" type=\"submit\">Agregar Skooter</Button>\r\n        </AvForm>\r\n        <Fade in={ this.state.fadein } tag=\"h3\" className=\"mt-3 text-center text-success\">\r\n          { this.state.message }\r\n          </Fade>       \r\n          </div>\r\n    );\r\n  };      \r\n};    \r\n  \r\n  export default reduxForm({\r\n    form: 'createSkooter'\r\n})(CreateSkooter);*/\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Button, Label, Fade } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\n\r\nexport class CreateSkooter extends React.Component {\r\n    static propTypes = {\r\n      onSubmit: PropTypes.func.isRequired\r\n      };\r\n      constructor(props) {\r\n        super(props);\r\n    this.state = {\r\n        idskooter: '',\r\n        errors: null,\r\n        fadein: false,\r\n        message: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);   \r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n  }\r\n  \r\n\r\n  handleChange(event) {\r\nconst {value} = event.currentTarget;\r\n    this.setState({ idskooter: value })  \r\n}; \r\n\r\n \r\n    handleSubmit(event, errors, values) {\r\n      if(errors.length===0){\r\n      this.props.onSubmit(values)\r\n        this.message('Agregado');       \r\n      } else this.message('Error campos no válidos');\r\n    }\r\n  \r\n  message = (message) =>{\r\n    this.setState({\r\n      idskooter: '',\r\n      fadein: true,\r\n      message: message\r\n    })\r\n    setTimeout (()=>{\r\n      this.setState({\r\n        fadein: false,\r\n        message: ''\r\n      })\r\n    },3000);\r\n  }\r\n\r\nrender (){   \r\n  return(  \r\n    <div> \r\n          <AvForm onSubmit={this.handleSubmit}>\r\n        <AvGroup>\r\n          <Label htmlFor=\"skooterIdskooter\" className=\"block\">\r\n            Id Skooter:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterIdskooter\"\r\n            value = {this.state.idskooter}\r\n            placeholder=\"CX####\"\r\n            id=\"skooterIdskooter\"\r\n            onChange={this.handleChange}\r\n            errorMessage=\"Id no válido\"\r\n            validate={{\r\n                required: {value: true},\r\n                pattern: {value: '^CX[0-9]+$'},\r\n                minLength: {value: 6},\r\n                maxLength: {value: 6}\r\n              }}\r\n          />         \r\n    \r\n          </AvGroup>          \r\n        <Button color=\"danger\" type=\"submit\">Agregar Skooter</Button>\r\n        </AvForm>\r\n        <Fade in={ this.state.fadein } tag=\"h3\" className=\"mt-3 text-center text-success\">\r\n          { this.state.message }\r\n          </Fade>       \r\n          </div>\r\n    );\r\n  };      \r\n};    \r\n  \r\n  export default reduxForm({\r\n    form: 'createSkooter'\r\n})(CreateSkooter);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSkooter } from './actions';\r\nimport SkooterForm from './SkooterForm';\r\n\r\nclass SkooterCreate extends React.Component{\r\n    onSubmit = formValues => {\r\n        this.props.createSkooter(formValues);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h3>Crear un Skooter</h3>\r\n                <SkooterForm onSubmit={this.onSubmit}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createSkooter })(SkooterCreate);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSkooter, editSkooter } from './actions';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Label, Fade } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SkooterEdit extends React.Component{\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n    };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        errors: null,\r\n        fadein: false,\r\n        message: ''\r\n    }      \r\n  this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSkooter(this.props.match.params.id);\r\n    }\r\n\r\n    handleSubmit(event, errors, values) {\r\n      if(errors.length===0){\r\n      this.props.editSkooter(this.props.match.params.id, values)\r\n      this.message('Skooter Editado');       \r\n      } else this.message('Error campos no válidos');\r\n    }\r\n\r\n    message = (message) =>{\r\n      this.setState({      \r\n        fadein: true,\r\n        message: message\r\n      })\r\n      setTimeout (()=>{\r\n        this.setState({\r\n          fadein: false,\r\n          message: ''\r\n        })\r\n      },3000);\r\n    }\r\n\r\n    render() {          \r\n    if (!this.props.skooter){                 \r\n        return (<Redirect to={{\r\n          pathname: '/Upd_Delete_skooters'\r\n        }}/>)    \r\n    }\r\n    else {        \r\n        const defaultValues = {\r\n            skooterIdskooter: this.props.skooter.id           \r\n        }\r\n    return (\r\n        <div>\r\n            <h3>Editar un Skooter</h3>\r\n            <div> \r\n          <AvForm onSubmit={this.handleSubmit} model={defaultValues}>\r\n        <AvGroup>\r\n          <Label htmlFor=\"skooterIdskooter\" className=\"block\">\r\n            Id Skooter:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"skooterIdskooter\"\r\n            placeholder=\"CX####\"\r\n            id=\"skooterIdskooter\"\r\n            errorMessage=\"Id no válido\"\r\n            validate={{\r\n                required: {value: true},\r\n                pattern: {value: '^CX[0-9]+$'},\r\n                minLength: {value: 6},\r\n                maxLength: {value: 6}\r\n              }}\r\n          />\r\n          </AvGroup>          \r\n        <Button color=\"danger\" type=\"submit\">Modificar Skooter</Button>\r\n        </AvForm>  \r\n        <Fade in={ this.state.fadein } tag=\"h3\" className=\"mt-3 text-center text-success\">\r\n          { this.state.message }\r\n          </Fade>                  \r\n          </div>          \r\n        </div>    \r\n    );}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { skooter: state.skooters[ownProps.match.params.id]};\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSkooter, editSkooter })(SkooterEdit);","/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={e => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">{ props.title }</div>\r\n                <div className=\"content\">\r\n                    {props.content}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}    \r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ModalDelete = (props) => {\r\n  \r\n  const [modal, setModal] = useState(true);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>      \r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>{props.title}</ModalHeader>\r\n        <ModalBody>\r\n            {props.content}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {props.actions} \r\n          {setModal}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalDelete;","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ModalDelete from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchSkooter, deleteSkooter } from './actions';\r\nimport { Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass SkooterDelete extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchSkooter(this.props.match.params.id);\r\n    }\r\n    renderActions(){\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <React.Fragment>\r\n                <Button onClick={() => this.props.deleteSkooter(id)} className=\"primary\">Eliminar</Button>\r\n                <Link to=\"/Upd_Delete_skooters\" className=\"secondary\">Cancelar</Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\nrenderContent(){\r\n    if(this.props.skooter){\r\n        return `Está seguro que quiere borrar el skooter con el id: ${this.props.skooter.id}`            \r\n} else {\r\n    history.push('/Upd_Delete_skooters');\r\n}\r\n}\r\n\r\nrender(){\r\n    if (!this.props.skooter){      \r\n    return (<Redirect to={{\r\n      pathname: '/Upd_Delete_skooters'\r\n    }}/>)    \r\n}\r\n    return (                   \r\n        <ModalDelete\r\n            title=\"Eliminar Skooter\"\r\n            content={this.renderContent()}\r\n            actions={this.renderActions()}\r\n            onDismiss={() => history.push('/')}\r\n        />          \r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return { skooter: state.skooters[ownProps.match.params.id] }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSkooter, deleteSkooter })(SkooterDelete);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'reactstrap';\r\nimport { fetchSkooters, fetchSkootersPage } from './actions';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './SkooterList.css';\r\n\r\n\r\nclass SkooterList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePage: 1\r\n        };\r\n      }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.fetchSkootersPage(pageNumber);        \r\n      }\r\n\r\n   componentDidMount(){\r\n        this.props.fetchSkooters();\r\n    }\r\n\r\n    renderList(){\r\n          return this.props.skooters.map (skooter => {\r\n            if(skooter.key){ \r\n            return (              \r\n                    <tr key={skooter.key}>\r\n                    <td>{skooter.id}</td>\r\n                    <td>{skooter.bateria}</td>\r\n                    <td>{skooter.battery_level}</td>\r\n                    <td>{skooter.cobertura}</td>\r\n                    <td>{skooter.ultima_latitud}</td>\r\n                    <td>{skooter.ultima_longitud}</td>\r\n                    </tr>       \r\n            )}        \r\n    })}\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Skooters</h2>\r\n                <Table hover className=\"text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Bateria</th>\r\n                            <th>Nivel de Bateria</th>\r\n                            <th>Cobertura</th>\r\n                            <th>Ultima Latitud</th>\r\n                            <th>Ultima Longitud</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.renderList()}</tbody>\r\n                    \r\n                </Table>\r\n                \r\n                    <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={140}\r\n                        pageRangeDisplayed={8}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        onChange={this.handlePageChange.bind(this)}         \r\n                    />                    \r\n                               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // convierte el objeto skooters en una matriz\r\n    return {\r\n        skooters: Object.values(state.skooters)     \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSkooters, fetchSkootersPage })(SkooterList);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Button, Label, Row, Col  } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\nimport { fetchSkooters, fetchSkootersPage, fetchSkootersSearch } from './actions';\r\nimport Pagination from \"react-js-pagination\";\r\nimport './SkooterList.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SkooterEditDelete extends React.Component {      \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePage: 1,\r\n          id: null\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n\r\n      handleChange(event) {\r\n        const {name, value} = event.currentTarget;        \r\n        if(name === 'userEmail') {\r\n            this.setState({ email: value })\r\n    }} \r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.fetchSkootersPage(pageNumber);        \r\n      }\r\n\r\n    handleSubmit(event, errors, values) {\r\n        console.log('entra al submit')\r\n        if(errors.length===0){   \r\n            console.log('entra al metodo de buscar')     \r\n          this.props.fetchSkootersSearch(values.skooterId)   \r\n          this.setState({activePage: 1});               \r\n                              \r\n        } else console.log('no entra al metodo')\r\n      };\r\n\r\n   componentDidMount(){\r\n        this.props.fetchSkooters();\r\n    }\r\n\r\n    renderList(){\r\n          return this.props.skooters.map (skooter => {\r\n            if(skooter.key){ \r\n            return (\r\n                    <tr key={skooter.key}>\r\n                    <td>{skooter.id}</td>                                                               \r\n                    <td><Link to={`/skooters/edit/${skooter.id}`} className=\"button primary\"><Button>Editar</Button></Link></td>\r\n                    <td><Link to={`/skooters/delete/${skooter.id}`} className=\"button negative\"><Button color=\"danger\">Eliminar</Button></Link></td>\r\n                    </tr>          \r\n                 )}        \r\n            }\r\n        )\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 7 }}>\r\n                        <h2 className=\"text-center\">Skooters</h2>\r\n                    </Col>                    \r\n                <Col sm=\"12\" md={{ size: 5 }}>\r\n                    <div className=\"buscar\">\r\n                <AvForm onSubmit={this.handleSubmit}>\r\n                    <AvGroup>\r\n                    <AvField\r\n                        type=\"text\"\r\n                        name=\"skooterId\"\r\n                        placeholder=\"Id Skooter\"\r\n                        id=\"skooterId\"\r\n                        onChange={this.handleChange}\r\n                        value = {this.state.id}\r\n                        errorMessage=\"Debe introducir un parámetro de búsqueda correcto\"\r\n                        validate={{\r\n                            required: {value: true},\r\n                            pattern: {value: '^CX[0-9]+$'},\r\n                            minLength: {value: 2},\r\n                            maxLength: {value: 6}                            \r\n                        }}                  \r\n                    />   \r\n                    </AvGroup>\r\n                    <Button color=\"danger\" type=\"submit\">Buscar Skooter</Button>\r\n                </AvForm> \r\n                </div>\r\n                </Col>  \r\n                </Row> \r\n                </div> \r\n                <Table hover className=\"text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>                            \r\n                            <th>Editar</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.renderList()}</tbody>                     \r\n                </Table>  \r\n                <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={140}\r\n                        pageRangeDisplayed={8}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        onChange={this.handlePageChange.bind(this)}         \r\n                    />                             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // convierte el objeto skooters en una matriz\r\n    return {\r\n        skooters: Object.values(state.skooters)     \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSkooters, fetchSkootersPage, fetchSkootersSearch })(SkooterEditDelete);\r\n\r\n","import { CREATE_USER, FETCH_USERS, FETCH_USER, DELETE_USER, EDIT_USER, SAVE_ERROR } from './action-types';\r\nimport history from \"../../history\";\r\nimport { dbStore } from '../../firebase/firebase';\r\n\r\n\r\nexport function saveUser (error) {\r\n    return{\r\n      type: SAVE_ERROR,\r\n      payload: error\r\n    };\r\n}\r\n\r\nexport function createUser  (formValues) {\r\n    return dispatch => {\r\n        let user = {\r\n            id: '',\r\n            name: formValues.userName,\r\n            email: formValues.userEmail,\r\n            balance: formValues.userBalance,\r\n            stripeCustomerId: ''\r\n          };      \r\n          let setDoc = dbStore.collection('users').add(user).then(function(docRef) {\r\n            var userRef = dbStore.collection('users').doc(docRef.id);\r\n              userRef.update({\r\n                id: docRef.id\r\n              })\r\n        }).catch(function(error) {\r\n          console.error(\"Error adding document: \", error);\r\n      });\r\n        }            \r\n};\r\n\r\nexport const editUser = (id, formValues) => dispatch => {  \r\n  var userRef = dbStore.collection('users').doc(id);\r\n  userRef.update({\r\n    name: formValues.userName,\r\n    email: formValues.userEmail,\r\n    balance: formValues.userBalance    \r\n  })\r\n  // Omite el usuario que se modifico para cargar el listado con los \r\n  // datos actualizados\r\n    dispatch({ type:DELETE_USER, payload: id });\r\n  }\r\n\r\nexport const fetchUsers = () => dispatch => {\r\n  let usersRef = dbStore.collection('users').orderBy('email').limit(10)\r\nlet allUsers = usersRef.get()\r\n  .then(snapshot => {\r\n    const users = []\r\n    snapshot.forEach(user => {  \r\n      users.push({ key: user.id, ...user.data() });\r\n    });\r\n    dispatch({ type:FETCH_USERS, payload: users });    \r\n  })\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\nexport const fetchUsersPage = (page) => dispatch => {\r\n  console.log('pagina '+ page)\r\n  const pageSearch = (page-1) * 10\r\n  console.log('search '+pageSearch)\r\n    let usersRef = dbStore.collection('users').orderBy('email')  \r\nlet allUsers = usersRef.get()\r\n  .then(snapshot => {\r\n    var firstVisible = snapshot.docs[pageSearch];\r\n    let userPaged = dbStore.collection('users').orderBy('email').startAt(firstVisible.data().email).limit(10)\r\n    let allPagedUsers = userPaged.get()\r\n    .then( snapshotUser => {\r\n    const users = []\r\n    snapshotUser.forEach(user => { \r\n      console.log(user.id) \r\n      users.push({ key: user.id, ...user.data() });\r\n    });\r\n    dispatch({ type:FETCH_USERS, payload: users });    \r\n  })})\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\n\r\nexport const fetchUsersSearch = (email) => dispatch => {\r\n  let usersRef = dbStore.collection('users').where('email', '>=', email).where('email', '<=', email+\"z\")\r\nlet allUsers = usersRef.get()\r\n  .then(snapshot => {\r\n    const users = []\r\n    snapshot.forEach(user => {  \r\n      users.push({ key: user.id, ...user.data() });\r\n    });\r\n    dispatch({ type:FETCH_USERS, payload: users });    \r\n  })\r\n  .catch(err => {\r\n    console.log('Error getting documents', err);\r\n  });  \r\n  \r\n}\r\n\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n  let responseUser = dbStore.collection('users').doc(id).get().then((doc) => {\r\n    // check if the document exists\r\n    if (doc.exists) {\r\n      const response = doc.data();\r\n      dispatch({ type: FETCH_USER, payload: response });      \r\n    } else {\r\n      throw new Error('No Such Document');\r\n    }\r\n})    \r\n}\r\n\r\nexport const deleteUser = (id) => async dispatch => {\r\n  let deleteUser = dbStore.collection('users').doc(id).delete()\r\n  dispatch({ type: DELETE_USER, payload: id });    \r\n}","export const CREATE_USER = 'CREATE_USER';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const EDIT_USER = 'EDIT_USERS';\r\nexport const SAVE_ERROR = 'SAVE_ERROR';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Button, FormGroup, Label, Fade } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\n\r\nexport class CreateUser extends React.Component {\r\n    static propTypes = {\r\n      onSubmit: PropTypes.func.isRequired\r\n      };\r\n      constructor(props) {\r\n        super(props);\r\n    this.state = {\r\n        name: '',\r\n        email: '',\r\n        balance: '',\r\n        created_at: '',        \r\n        errors: null,\r\n        fadein: false,\r\n        message: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);   \r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n  }\r\n  \r\n\r\n  handleChange(event) {\r\n    const {name, value} = event.currentTarget;\r\n    \r\n    if(name === 'userName') {\r\n        this.setState({ name: value })\r\n    }\r\n    else if(name === 'userEmail'){\r\n        this.setState({ email: value })    \r\n    }\r\n    else if(name === 'userBalance'){\r\n        this.setState({ balance: value })\r\n    }\r\n    else if(name === 'created_at'){\r\n        this.setState({ created_at: value })\r\n    }    \r\n    }; \r\n    \r\n\r\n \r\n    handleSubmit(event, errors, values) {\r\n      if(errors.length===0){\r\n      this.props.onSubmit(values)\r\n        this.message('Agregado');       \r\n      } else this.message('Error campos no válidos');\r\n    }\r\n  \r\n  message = (message) =>{\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      balance: '',\r\n      created_at: '',\r\n      fadein: true,\r\n      message: message\r\n    })\r\n    setTimeout (()=>{\r\n      this.setState({\r\n        fadein: false,\r\n        message: ''\r\n      })\r\n    },3000);\r\n  }\r\n\r\nrender (){   \r\n  return(  \r\n    <div> \r\n          <AvForm onSubmit={this.handleSubmit}>\r\n        <AvGroup>\r\n          <Label htmlFor=\"userName\" className=\"block\">\r\n            Nombre:\r\n          </Label>\r\n          <AvField\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            value = {this.state.name}\r\n            placeholder=\"Nombre de usuario\"\r\n            id=\"userName\"\r\n            onChange={this.handleChange}\r\n            errorMessage=\"Nombre no válido\"\r\n            validate={{\r\n                required: {value: true},\r\n                pattern: {value: '^([a-zñáéíóúA-ZÑÁÉÍÓÚ0-9_-]*)+$'},\r\n                minLength: {value: 2},\r\n                maxLength: {value: 20}\r\n              }}\r\n          />\r\n          </AvGroup>   \r\n          <FormGroup>\r\n          <Label htmlFor=\"userEmail\" className=\"block\">\r\n            Correo:\r\n          </Label>\r\n          <AvField\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            value = {this.state.email}\r\n            placeholder=\"Email del Usuario\"\r\n            id=\"userEmail\"\r\n            onChange={this.handleChange}       \r\n            errorMessage=\"El correo del usuario es obligatorio\"\r\n            validate={{\r\n                required: {value: true},\r\n                minLength: {value: 4},\r\n                maxLength: {value: 40}\r\n              }}                  \r\n          />   \r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label htmlFor=\"userBalance\" className=\"block\">\r\n            Balance:\r\n          </Label>\r\n          <AvField\r\n            type=\"number\"\r\n            name=\"userBalance\"\r\n            value = {this.state.balance}\r\n            placeholder=\"1\"\r\n            id=\"userBalance\"\r\n            onChange={this.handleChange} \r\n          />\r\n          </FormGroup>   \r\n          \r\n          <FormGroup>\r\n          <Label htmlFor=\"created_at\" className=\"block\">\r\n            Fecha de creado:\r\n          </Label>\r\n          <AvField\r\n            type=\"date\"\r\n            name=\"created_at\"\r\n            value = {this.state.balance}\r\n            placeholder=\"1\"\r\n            id=\"created_at\"\r\n            onChange={this.handleChange} \r\n          />\r\n          </FormGroup>          \r\n        <Button color=\"danger\" type=\"submit\">Agregar Usuario</Button>\r\n        </AvForm>\r\n        <Fade in={ this.state.fadein } tag=\"h3\" className=\"mt-3 text-center text-success\">\r\n          { this.state.message }\r\n          </Fade>       \r\n          </div>\r\n    );\r\n  };      \r\n};    \r\n  \r\n  export default reduxForm({\r\n    form: 'createUser'\r\n})(CreateUser);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createUser } from './actions';\r\nimport UserForm from './UserForm';\r\n\r\nclass UserCreate extends React.Component{\r\n    onSubmit = formValues => {\r\n        this.props.createUser(formValues);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h3>Crear un Usuario</h3>\r\n                <UserForm onSubmit={this.onSubmit}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createUser })(UserCreate);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser, editUser } from './actions';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, FormGroup, Label, Fade } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass UserEdit extends React.Component{\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n    };\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        email: '',\r\n        balance: '',        \r\n        errors: null,\r\n        fadein: false,\r\n        message: ''\r\n    } \r\n    this.handleSubmit = this.handleSubmit.bind(this);    \r\n};\r\n\r\n    componentDidMount() {        \r\n        this.props.fetchUser(this.props.match.params.id);\r\n    };\r\n\r\n    handleSubmit(event, errors, values) {\r\n      if(errors.length===0){        \r\n        this.props.editUser(this.props.match.params.id, values)                  \r\n        this.message('Usuario Editado Correctamente');                     \r\n      } else this.message('Error campos no válidos');\r\n    };\r\n\r\n    message = (message) =>{\r\n      this.setState({              \r\n        fadein: true,\r\n        message: message\r\n      })\r\n      setTimeout (()=>{\r\n        this.setState({\r\n          fadein: false,\r\n          message: ''\r\n        })\r\n      },3000);      \r\n    };\r\n\r\n    render() {            \r\n    if (!this.props.user){\r\n      console.log('entro aki') \r\n        return (<Redirect to={{\r\n          pathname: '/Upd_Delete_users'\r\n        }}/>)\r\n    }\r\n    else {        \r\n        const defaultValues = {\r\n            userName: this.props.user.name,\r\n            userEmail: this.props.user.email,\r\n            userBalance: this.props.user.balance\r\n        }\r\n    return (                 \r\n      <div> \r\n      <AvForm onSubmit={this.handleSubmit} model={defaultValues}>\r\n    <AvGroup>\r\n      <Label htmlFor=\"userName\" className=\"block\">\r\n        Nombre:\r\n      </Label>\r\n      <AvField\r\n        type=\"text\"\r\n        name=\"userName\"\r\n        value = {this.state.name}\r\n        placeholder=\"Nombre de usuario\"\r\n        id=\"userName\"\r\n        errorMessage=\"Nombre no válido\"\r\n        validate={{\r\n            required: {value: true},\r\n            pattern: {value: '^([a-zñáéíóúA-ZÑÁÉÍÓÚ0-9_-]*)+$'},\r\n            minLength: {value: 2},\r\n            maxLength: {value: 20}\r\n          }}\r\n      />\r\n      </AvGroup>   \r\n      <FormGroup>\r\n      <Label htmlFor=\"userEmail\" className=\"block\">\r\n        Correo:\r\n      </Label>\r\n      <AvField\r\n        type=\"email\"\r\n        name=\"userEmail\"\r\n        value = {this.state.email}\r\n        placeholder=\"Email del Usuario\"\r\n        id=\"userEmail\"\r\n        errorMessage=\"El correo del usuario es obligatorio\"\r\n        validate={{\r\n            required: {value: true},\r\n            minLength: {value: 4},\r\n            maxLength: {value: 40}\r\n          }}                  \r\n      />   \r\n      </FormGroup>\r\n      <FormGroup>\r\n      <Label htmlFor=\"userBalance\" className=\"block\">\r\n        Balance:\r\n      </Label>\r\n      <AvField\r\n        type=\"number\"\r\n        name=\"userBalance\"\r\n        value = {this.state.balance}\r\n        placeholder=\"1\"\r\n        id=\"userBalance\"        \r\n      />\r\n      </FormGroup>                  \r\n    <Button color=\"danger\" type=\"submit\">Editar Usuario</Button>\r\n    </AvForm>\r\n    <Fade in={ this.state.fadein } tag=\"h3\" className=\"mt-3 text-center text-success\">\r\n      { this.state.message }\r\n      </Fade>       \r\n      </div>   \r\n    );}\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users[ownProps.match.params.id]};\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchUser, editUser })(UserEdit);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ModalDelete from '../Modal';\r\n//import history from '../../history';\r\nimport { fetchUser, deleteUser } from './actions';\r\nimport { Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass UserDelete extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchUser(this.props.match.params.id);\r\n    }\r\n    renderActions(){\r\n        const id = this.props.match.params.id;        \r\n        return (\r\n            <React.Fragment>\r\n                <Button onClick={() => this.props.deleteUser(id)} className=\"primary\">Eliminar</Button>\r\n                <Link to=\"/Upd_Delete_users\" className=\"secondary\">Cancelar</Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\nrenderContent(){\r\n        return `Está seguro que quiere borrar el usuario con el nombre: ${this.props.user.name} y el email: ${this.props.user.email}`            \r\n} \r\n\r\nrender(){\r\n    if (!this.props.user){      \r\n    return (<Redirect to={{\r\n      pathname: '/Upd_Delete_users'\r\n    }}/>)    \r\n}\r\n    return (                   \r\n        <ModalDelete\r\n            title=\"Eliminar Usuario\"\r\n            content={this.renderContent()}\r\n            actions={this.renderActions()}            \r\n        />          \r\n    );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return { user: state.users[ownProps.match.params.id] }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchUser, deleteUser })(UserDelete);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'reactstrap';\r\nimport { fetchUsers, fetchUsersPage } from './actions';\r\nimport Pagination from \"react-js-pagination\";\r\nimport './UserList.css';\r\n\r\nclass UserList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePage: 1\r\n        };\r\n      }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.fetchUsersPage(pageNumber);        \r\n      }\r\n         \r\n    componentDidMount(){\r\n        this.props.fetchUsers()        \r\n    }\r\n\r\n    renderList(){\r\n        const usersArray = this.props.users\r\n          return (\r\n              usersArray.map ((user) => {\r\n            if(user.key){                 \r\n            return (                                \r\n                <tr key={user.key}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.id}</td>\r\n                <td>{user.balance}</td> \r\n                <td>{user.stripeCustomerId}</td>                   \r\n                </tr>\r\n                )\r\n            }        \r\n          }) \r\n           )\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Usuarios</h2>\r\n                <Table hover className=\"text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Correo</th>\r\n                            <th>ID</th>\r\n                            <th>Balance</th>\r\n                            <th>Customer ID</th>\r\n                        </tr>\r\n                    </thead>                \r\n                <tbody>{this.renderList()}</tbody> \r\n                </Table>     \r\n                <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={5440}\r\n                        pageRangeDisplayed={8}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        onChange={this.handlePageChange.bind(this)}         \r\n                    />        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // convierte el objeto users en una matriz\r\n    return {\r\n        users: Object.values(state.users)            \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchUsers, fetchUsersPage })(UserList);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Button, Label, Row, Col  } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\r\nimport { fetchUsers, fetchUsersPage, fetchUsersSearch } from './actions';\r\nimport Pagination from \"react-js-pagination\";\r\nimport './UserList.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass UserEditDelete extends React.Component {  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePage: 1,\r\n          email: null\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n        this.handleChange = this.handleChange.bind(this);\r\n      } \r\n\r\n     handleChange(event) {\r\n        const {name, value} = event.currentTarget;        \r\n        if(name === 'userEmail') {\r\n            this.setState({ email: value })\r\n    }}\r\n\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n        this.props.fetchUsersPage(pageNumber);        \r\n    }\r\n\r\n    handleSubmit(event, errors, values) {\r\n        console.log('entra al submit')\r\n        if(errors.length===0){   \r\n            console.log('entra al metodo de buscar')     \r\n          this.props.fetchUsersSearch(values.userEmail)   \r\n          this.setState({activePage: 1});               \r\n                              \r\n        } else console.log('no entra al metodo')\r\n      };\r\n\r\n    componentDidMount(){\r\n        this.props.fetchUsers();\r\n    }\r\n\r\n    renderList(){\r\n          return this.props.users.map (user => {              \r\n              if(user.key){             \r\n            return (              \r\n                    <tr key={user.key}>\r\n                    <td>{user.name}</td> \r\n                    <td>{user.email}</td>                                                            \r\n                    <td><Link to={`/users/edit/${user.key}`} className=\"button primary\"><Button>Editar</Button></Link></td>\r\n                    <td><Link to={`/users/delete/${user.key}`} className=\"button negative\"><Button color=\"danger\">Eliminar</Button></Link></td>\r\n                    </tr> \r\n                )}      \r\n            }\r\n        )  \r\n        \r\n    };\r\n\r\n  \r\n    render() {\r\n        return (\r\n          \r\n            <div>\r\n                <div>\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 7 }}>\r\n                        <h2 className=\"text-center\">Usuarios</h2>\r\n                    </Col>                    \r\n                <Col sm=\"12\" md={{ size: 5 }}>\r\n                    <div className=\"buscar\">\r\n                <AvForm onSubmit={this.handleSubmit}>\r\n                    <AvGroup>\r\n                    <AvField\r\n                        type=\"text\"\r\n                        name=\"userEmail\"\r\n                        placeholder=\"Email del Usuario\"\r\n                        id=\"userEmail\"\r\n                        onChange={this.handleChange}\r\n                        value = {this.state.email}\r\n                        errorMessage=\"Debe introducir un parámetro de búsqueda\"\r\n                        validate={{\r\n                            required: {value: true}                            \r\n                        }}                  \r\n                    />   \r\n                    </AvGroup>\r\n                    <Button color=\"danger\" type=\"submit\">Buscar Usuario</Button>\r\n                </AvForm> \r\n                </div>\r\n                </Col>  \r\n                </Row> \r\n                </div>             \r\n                <Table hover className=\"text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Correo</th>                            \r\n                            <th>Editar</th>\r\n                            <th>Eliminar</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.renderList()}</tbody>                    \r\n                </Table>   \r\n                <Pagination\r\n                        activePage={this.state.activePage}\r\n                        itemsCountPerPage={10}\r\n                        totalItemsCount={5440}\r\n                        pageRangeDisplayed={8}\r\n                        itemClass=\"page-item\"\r\n                        linkClass=\"page-link\"\r\n                        onChange={this.handlePageChange.bind(this)}         \r\n                    />                             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // convierte el objeto users en una matriz\r\n    return {\r\n        users: Object.values(state.users)     \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchUsers, fetchUsersPage, fetchUsersSearch })(UserEditDelete);\r\n\r\n","import React from 'react';\r\nimport { signOut } from './actions';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Salir extends React.Component {\r\n    componentDidMount(){\r\n        this.props.signOut();\r\n        console.log('pasa por component')\r\n    }\r\n\r\n    render(){\r\n        return (<Redirect to={{\r\n            pathname: '/sign-in'            \r\n          }}/>) \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: Object.values(state.auth)     \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signOut })(Salir);\r\n\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Container } from 'reactstrap';\r\nimport NavBar from './Navbar';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SkooterCreate from '../skooters/SkooterCreate';\r\nimport SkooterEdit from '../skooters/SkooterEdit';\r\nimport SkooterDelete from '../skooters/SkooterDelete';\r\nimport SkooterList from '../skooters/SkooterList';\r\nimport SkooterEditDelete from '../skooters/SkooterEditDelete';\r\nimport UserCreate from '../users/UserCreate';\r\nimport UserEdit from '../users/UserEdit';\r\nimport UserDelete from '../users/UserDelete';\r\nimport UserList from '../users/UserList';\r\nimport UserEditDelete from '../users/UserEditDelete';\r\nimport Salir from '../../auth/salir';\r\n\r\nexport default props => (\r\n    <Container fluid className={classNames('content', {'is-open': props.isOpen})}>\r\n      <NavBar toggle={props.toggle}/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={() => \" \" } />\r\n        <Route exact path=\"/salir\" component={ Salir } />\r\n        <Route exact path=\"/Pages\" component={() => \"Pages\" } />\r\n        <Route exact path=\"/faq\" component={() => \"FAQ\" } />\r\n        <Route exact path=\"/contact\" component={() => \"Contact\" } />\r\n        <Route exact path=\"/Add_user\" component={ UserCreate } />\r\n        <Route exact path=\"/List_users\" component={ UserList } />\r\n        <Route exact path=\"/Upd_Delete_users\" component={ UserEditDelete } />\r\n        <Route exact path=\"/users/edit/:id\" component={ UserEdit }/>\r\n        <Route exact path=\"/users/delete/:id\" component={ UserDelete }/>\r\n        <Route exact path=\"/Add_skooter\" component={ SkooterCreate } />\r\n        <Route exact path=\"/List_skooters\" component={ SkooterList } />\r\n        <Route exact path=\"/Upd_Delete_skooters\" component={ SkooterEditDelete } />\r\n        <Route exact path=\"/skooters/edit/:id\" component={ SkooterEdit }/>\r\n        <Route exact path=\"/skooters/delete/:id\" component={ SkooterDelete }/>\r\n        <Route exact path=\"/Add_places\" component={() => \"Pagina agregar sitios\" } />\r\n        <Route exact path=\"/List_places\" component={() => \"Pagina listar sitios\" } />\r\n        <Route exact path=\"/Upd_Delete_places\" component={() => \"Pgina Actualizar sitios\" } />                      \r\n      </Switch>\r\n    </Container>\r\n)\r\n","import React, { useState } from 'react';\nimport '../tasks/tasks-page.css';\nimport SideBar from '../../components/sidebar/SideBar';\nimport Content from '../../components/content/Content';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport history from '../../../src/history';\n\nexport default () => {\n\n  const [isOpen, setOpen] = useState(true)\n  const toggle = () => setOpen(!isOpen)\n\n  return (\n    <Router history={history}>\n      <div className=\"App wrapper\">\n        <SideBar toggle={toggle} isOpen={isOpen}/>\n        <Content toggle={toggle} isOpen={isOpen}/>\n      </div>      \n    </Router>\n  );\n}\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Router } from 'react-router-dom';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { authActions, getAuth } from './auth';\r\nimport RequireAuthRoute from './components/require-auth-route';\r\nimport RequireUnauthRoute from './components/require-unauth-route';\r\nimport SignInPage from './pages/sign-in';\r\nimport TasksPage from './pages/tasks';\r\nimport history from '../src/history';\r\n\r\n\r\nconst App = ({authenticated, signOut}) => (\r\n  <Router history={history}>\r\n     <div>\r\n      <main>  \r\n          <RequireUnauthRoute authenticated={authenticated} const path=\"/sign-in\" component={SignInPage}/>     \r\n          <RequireAuthRoute authenticated={authenticated} const exact path=\"/\" component={TasksPage}/>               \r\n        </main>     \r\n      </div> \r\n      </Router>        \r\n  );\r\n\r\n  App.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired,\r\n    signOut: PropTypes.func.isRequired\r\n  };\r\n\r\n//=====================================\r\n//  CONNECT\r\n//-------------------------------------\r\n\r\nconst mapStateToProps = getAuth;\r\n\r\nconst mapDispatchToProps = {\r\n  signOut: authActions.signOut\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App)\r\n);\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from 'lodash';\r\nimport {\r\n    FETCH_SKOOTER,\r\n    FETCH_SKOOTERS,\r\n    CREATE_SKOOTER,\r\n    EDIT_SKOOTER,\r\n    DELETE_SKOOTER\r\n} from './action-types';\r\n\r\nexport function skootersReducer (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_SKOOTERS:\r\n            return { state, ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_SKOOTER:\r\n            return { ...state, [action.payload.id]: action.payload };     \r\n        case CREATE_SKOOTER:\r\n            return { ...state, [action.payload.id]: action.payload }; \r\n        case EDIT_SKOOTER:\r\n            return { ...state, [action.payload.id]: action.payload }; \r\n        case DELETE_SKOOTER:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from 'lodash';\r\nimport {\r\n    FETCH_USER,\r\n    FETCH_USERS,\r\n    CREATE_USER,\r\n    EDIT_USER,\r\n    DELETE_USER\r\n} from './action-types';\r\n\r\nexport function usersReducer (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_USERS:\r\n            return { state, ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_USER:\r\n            return { ...state, [action.payload.id]: action.payload };     \r\n        case CREATE_USER:\r\n            return { ...state, [action.payload.id]: action.payload }; \r\n        case EDIT_USER:\r\n            return { ...state, [action.payload.id]: action.payload }; \r\n        case DELETE_USER:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","//import { routerReducer } from 'react-router-redux';\nimport { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux';\nimport { authReducer } from './auth';\nimport { skootersReducer } from './components/skooters/reducer';\nimport { usersReducer } from './components/users/reducer';\n//import { history } from './history'\n//import { notificationReducer } from './notification';\n//import { tasksReducer } from './tasks';\n\n\nconst createRootReducer = (history) => combineReducers({\n  auth: authReducer,\n  skooters: skootersReducer,\n  users: usersReducer,\n  router: connectRouter(history)  \n});\nexport default createRootReducer\n\n/*import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  ... // rest of your reducers\n})\nexport default createRootReducer*/","import { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\nimport history from './history';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    compose(\n      applyMiddleware(\n        thunk,\n        routerMiddleware(history), // for dispatching history actions\n        // ... other middlewares ...\n      ),\n    ),\n  )\n\n  return store\n}","import { firebaseAuth } from '../firebase/firebase';\nimport * as authActions from './actions';\n\n\nexport function initAuth(dispatch) {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged(\n      authUser => {\n        dispatch(authActions.initAuth(authUser));\n        unsubscribe();\n        resolve();\n      },\n      error => reject(error)\n    );\n  });\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { initAuth } from './auth';\r\nimport configureStore from './store';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport history from './history';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\n\r\n\r\nconst store = configureStore();\r\nconst rootElement = document.getElementById('root');\r\n\r\n\r\nfunction render(Component) {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <div>\r\n          <Component/>\r\n        </div>\r\n      </ConnectedRouter>\r\n    </Provider>,\r\n    rootElement\r\n  );\r\n}\r\n\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./App', () => {\r\n    render(require('./App').default);\r\n  })\r\n}\r\n\r\n\r\nregisterServiceWorker();\r\n\r\ninitAuth(store.dispatch)\r\n.then(() => render(App))\r\n.catch(error => console.error(error));\r\n\r\n  \r\n"],"sourceRoot":""}